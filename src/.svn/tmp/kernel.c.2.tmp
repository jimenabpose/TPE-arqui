#include "../include/kasm.h"
#include "../include/defs.h"
#include "../include/console.h"
#include "../include/keyboard.h"
#include "../include/cpu_info.h"


DESCR_INT idt[0xA];		/* IDT de 10 entradas*/
IDTR idtr;				/* IDTR */

//int tickpos=640;

void int_08() 
{
	
    //char *video = (char *) 0xb8000;
    //video[tickpos]='-';
    
    return;

}


/**********************************************
kmain() 
Punto de entrada de c√≥o C.
*************************************************/

kmain() 
{

        int i,num;

/* Borra la pantalla. */ 

	k_clear_screen();
	


/* CARGA DE IDT CON LA RUTINA DE ATENCION DE IRQ0    */

        setup_IDT_entry (&idt[0x08], 0x08, (dword)&_int_08_hand, ACS_INT, 0);
        setup_IDT_entry (&idt[0x09], 0x08, (dword)&_int_09_hand, ACS_INT, 0);
        setup_IDT_entry (&idt[0x80], 0x08, (dword)&_int_80_hand, ACS_INT, 0);
	
/* Carga de IDTR    */

	idtr.base = 0;  
	idtr.base +=(dword) &idt;
	idtr.limit = sizeof(idt)-1;
	
	_lidt (&idtr);	

	_Cli();
	
/* Habilito interrupcion de timer tick*/

    _mascaraPIC1(0xFC);
    /*          1111 1100   */
	_mascaraPIC2(0xFF);
    /*          1111 1111   */
        
	_Sti();

	funcionPrincipal();
        while(1)
        {
        } 
}



/*
** ciclo principal del interprete de comandos
*/

void
funcionPrincipal()
{
	int i;
	int c;
	int ret;
	char data[2][LONG_STR_TKN];
	char in[LONG_STR_CMD];

	/*tTicks=0;*/

	flush();
	/*cursor = 0;*/

	while(1)
	{
		/*if(ret==ECHO_CD || ret==CNF_CD || ret==SETTIME_CD || ret==GBG_CD || ret==CODE_CD)
			put_char('\n');

		print_nline();
		*/

		i=0;
		
		while((c=get_char())!='\n')
		{
			if(c<0x05)
				;
			else if(c!='\x08')
			{
				if(i<LONG_STR_CMD)
					in[i]=c;
				i++;
				printChar(c);
				flush();
			}
			else if(i>0)
			{
				i--;
				printChar(c);
				flush();
			}
		}
		printChar('\n');
		if(i>=LONG_STR_CMD)
			i=LONG_STR_CMD-1;
		in[i]=0;

		/*separaPorEspacios(in, data);*/

		ret=comandos(data);

		data[0][0]=data[1][0]=0;
	}
}


