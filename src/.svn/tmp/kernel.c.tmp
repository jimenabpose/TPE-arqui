#include "../include/kasm.h"
#include "../include/defs.h"
#include "../include/console.h"
#include "keyboard.c"

DESCR_INT idt[0xA];		/* IDT de 10 entradas*/
IDTR idtr;				/* IDTR */

//int tickpos=640;

void int_08() 
{
	
    //char *video = (char *) 0xb8000;
    //video[tickpos]='-';
    
    return;

}

void int_09(int code) 
{
	_pruebaSuma(3,4);
	/*if ((code >= 0x10 && code <= 0x19) || (code >= 0x1E && code <= 0x26) || 
		(code >= 0x2C && code <= 0x32))
	{
		printf("%c",ScanCodesEn[code][1]);
<<<<<<< .mine
	}*/
=======
	}
>>>>>>> .r9
	
//	char *video = (char *) 0xb8000;
//	video[tickpos+10]=ScanCodesEn[code-1][2];
//
//	
//	tickpos = (tickpos + 10) % (80*40);
//	
	return;
}

/**********************************************
kmain() 
Punto de entrada de c√≥o C.
*************************************************/

kmain() 
{

        int i,num;

/* Borra la pantalla. */ 

	k_clear_screen();
	


/* CARGA DE IDT CON LA RUTINA DE ATENCION DE IRQ0    */

        setup_IDT_entry (&idt[0x08], 0x08, (dword)&_int_08_hand, ACS_INT, 0);
        setup_IDT_entry (&idt[0x09], 0x08, (dword)&_int_09_hand, ACS_INT, 0);
	
/* Carga de IDTR    */

	idtr.base = 0;  
	idtr.base +=(dword) &idt;
	idtr.limit = sizeof(idt)-1;
	
	_lidt (&idtr);	

	_Cli();
	
/* Habilito interrupcion de timer tick*/

    	_mascaraPIC1(0xF8);
    /*          1111 1000   */
	_mascaraPIC2(0xEF);
    /*          1110 1111   */
        
	_Sti();

        while(1)
        {
        } 
}

